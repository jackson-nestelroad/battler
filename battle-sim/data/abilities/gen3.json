{
  "stench": {
    "name": "Stench",
    "flags": [],
    "effect": {
      "callbacks": {
        "on_use_move": {
          "priority": -1,
          "program": [
            "if $move.category == status:",
            ["return"],
            "foreach $secondary in $move.secondary_effects:",
            [
              "if $secondary.target.is_defined and $secondary.target.volatile_status == flinch:",
              ["return"]
            ],
            "$added_secondary = func_call(secondary_hit_effect)",
            "$added_secondary.chance = 1/10",
            "$added_secondary.target = func_call(hit_effect)",
            "$added_secondary.target.volatile_status = flinch",
            "add_secondary_effect_to_move: $move $added_secondary"
          ]
        }
      }
    }
  },
  "drizzle": {
    "name": "Drizzle",
    "flags": [],
    "effect": {
      "callbacks": {
        "on_start": ["set_weather: rainweather use_target_as_source"]
      }
    }
  },
  "speedboost": {
    "name": "Speed Boost",
    "flags": [],
    "effect": {
      "callbacks": {
        "on_residual": [
          "if $target.active_turns > 0:",
          ["boost: $target spe:1"]
        ]
      }
    }
  },
  "battlearmor": {
    "name": "Battle Armor",
    "flags": ["Breakable"],
    "effect": {
      "callbacks": {
        "on_critical_hit": ["return false"]
      }
    }
  },
  "sturdy": {
    "name": "Sturdy",
    "flags": ["Breakable"],
    "effect": {
      "callbacks": {
        "on_try_hit": [
          "if $move.ohko:",
          ["log_immune: $target from_effect", "return stop"]
        ],
        "on_damage": {
          "priority": -100,
          "program": [
            "if $target.hp == $target.max_hp and $damage > $target.hp and $effect.is_move:",
            ["log_ability", "return $target.hp - 1"]
          ]
        }
      }
    }
  },
  "damp": {
    "name": "Damp",
    "flags": ["Breakable"],
    "effect": {
      "callbacks": {
        "on_any_try_move": [
          "if [explosion, mindblown, mistyexplosion, selfdestruct] has $move.id:",
          [
            "log_cant: with_source use_effect_state_target_as_source",
            "return false"
          ]
        ],
        "on_any_damage": ["if $effect.id == aftermath:", ["return 0"]]
      }
    }
  },
  "limber": {
    "name": "Limber",
    "flags": ["Breakable"],
    "effect": {
      "callbacks": {
        "on_update": [
          "if $mon.status == par:",
          ["log_ability", "cure_status: $mon"]
        ],
        "on_set_status": [
          "if $status.id != par:",
          ["return"],
          "if $effect.is_move and !$effect.is_move_secondary:",
          ["log_immune: $target from_effect"],
          "return false"
        ]
      }
    }
  },
  "sandveil": {
    "name": "Sand Veil",
    "flags": ["Breakable"],
    "effect": {
      "callbacks": {
        "on_immunity": ["if $effect.id == sandstormweather:", ["return false"]],
        "on_modify_accuracy": [
          "if $field.weather == sandstormweather:",
          ["return $acc * 4/5"]
        ]
      }
    }
  },
  "static": {
    "name": "Static",
    "flags": [],
    "effect": {
      "callbacks": {
        "on_damaging_hit": [
          "if func_call(move_makes_contact: $move) and func_call(chance: 3 10):",
          ["set_status: $source par $target"]
        ]
      }
    }
  },
  "voltabsorb": {
    "name": "Volt Absorb",
    "flags": ["Breakable"],
    "effect": {
      "callbacks": {
        "on_try_hit": [
          "if $target != $source and $move.type == electric:",
          [
            "if func_call(heal: $target expr($target.base_max_hp / 4) $target) == 0:",
            ["log_immune: $target from_effect"],
            "return stop"
          ]
        ]
      }
    }
  },
  "waterabsorb": {
    "name": "Water Absorb",
    "flags": ["Breakable"],
    "effect": {
      "callbacks": {
        "on_try_hit": [
          "if $target != $source and $move.type == electric:",
          [
            "if func_call(heal: $target expr($target.base_max_hp / 4)) > 0:",
            ["log_immune: $target from_effect"],
            "return stop"
          ]
        ]
      }
    }
  },
  "oblivious": { "name": "Oblivious", "flags": [] },
  "cloudnine": { "name": "Cloud Nine", "flags": [] },
  "compoundeyes": { "name": "Compound Eyes", "flags": [] },
  "insomnia": { "name": "Insomnia", "flags": [] },
  "colorchange": { "name": "Color Change", "flags": [] },
  "immunity": { "name": "Immunity", "flags": [] },
  "flashfire": { "name": "Flash Fire", "flags": [] },
  "shielddust": { "name": "Shield Dust", "flags": [] },
  "owntempo": { "name": "Own Tempo", "flags": [] },
  "suctioncups": { "name": "Suction Cups", "flags": [] },
  "intimidate": { "name": "Intimidate", "flags": [] },
  "shadowtag": { "name": "Shadow Tag", "flags": [] },
  "roughskin": { "name": "Rough Skin", "flags": [] },
  "wonderguard": {
    "name": "Wonder Guard",
    "flags": ["NoRolePlay", "NoSkillSwap"]
  },
  "levitate": { "name": "Levitate", "flags": [] },
  "effectspore": { "name": "Effect Spore", "flags": [] },
  "synchronize": { "name": "Synchronize", "flags": [] },
  "clearbody": { "name": "Clear Body", "flags": [] },
  "naturalcure": { "name": "Natural Cure", "flags": [] },
  "lightningrod": { "name": "Lightning Rod", "flags": [] },
  "serenegrace": { "name": "Serene Grace", "flags": [] },
  "swiftswim": { "name": "Swift Swim", "flags": [] },
  "chlorophyll": { "name": "Chlorophyll", "flags": [] },
  "illuminate": { "name": "Illuminate", "flags": [] },
  "trace": { "name": "Trace", "flags": ["NoRolePlay"] },
  "hugepower": { "name": "Huge Power", "flags": [] },
  "poisonpoint": { "name": "Poison Point", "flags": [] },
  "innerfocus": { "name": "Inner Focus", "flags": [] },
  "magmaarmor": { "name": "Magma Armor", "flags": [] },
  "waterveil": { "name": "Water Veil", "flags": [] },
  "magnetpull": { "name": "Magnet Pull", "flags": [] },
  "soundproof": {
    "name": "Soundproof",
    "flags": [],
    "effect": {
      "callbacks": {
        "is_soundproof": ["return true"],
        "on_try_hit": [
          "if $target != $source and func_call(move_has_flag: $move sound):",
          ["log_immune: $target from_effect", "return false"]
        ]
      }
    }
  },
  "raindish": { "name": "Rain Dish", "flags": [] },
  "sandstream": {
    "name": "Sand Stream",
    "flags": [],
    "effect": {
      "callbacks": {
        "on_start": ["set_weather: sandstormweather use_target_as_source"]
      }
    }
  },
  "pressure": { "name": "Pressure", "flags": [] },
  "thickfat": { "name": "Thick Fat", "flags": [] },
  "earlybird": { "name": "Early Bird", "flags": [] },
  "flamebody": { "name": "Flame Body", "flags": [] },
  "runaway": { "name": "Run Away", "flags": [] },
  "keeneye": { "name": "Keen Eye", "flags": [] },
  "hypercutter": { "name": "Hyper Cutter", "flags": [] },
  "pickup": { "name": "Pickup", "flags": [] },
  "truant": { "name": "Truant", "flags": [] },
  "hustle": { "name": "Hustle", "flags": [] },
  "cutecharm": { "name": "Cute Charm", "flags": [] },
  "plus": { "name": "Plus", "flags": [] },
  "minus": { "name": "Minus", "flags": [] },
  "forecast": { "name": "Forecast", "flags": ["NoRolePlay"] },
  "stickyhold": { "name": "Sticky Hold", "flags": [] },
  "shedskin": { "name": "Shed Skin", "flags": [] },
  "guts": { "name": "Guts", "flags": [] },
  "marvelscale": { "name": "Marvel Scale", "flags": [] },
  "liquidooze": { "name": "Liquid Ooze", "flags": [] },
  "overgrow": { "name": "Overgrow", "flags": [] },
  "blaze": { "name": "Blaze", "flags": [] },
  "torrent": { "name": "Torrent", "flags": [] },
  "swarm": { "name": "Swarm", "flags": [] },
  "rockhead": { "name": "Rock Head", "flags": [] },
  "drought": {
    "name": "Drought",
    "flags": [],
    "effect": {
      "callbacks": {
        "on_start": ["set_weather: harshsunlight use_target_as_source"]
      }
    }
  },
  "arenatrap": { "name": "Arena Trap", "flags": [] },
  "vitalspirit": { "name": "Vital Spirit", "flags": [] },
  "whitesmoke": { "name": "White Smoke", "flags": [] },
  "purepower": { "name": "Pure Power", "flags": [] },
  "shellarmor": { "name": "Shell Armor", "flags": [] },
  "airlock": {
    "name": "Air Lock",
    "flags": [],
    "effect": {
      "callbacks": {
        "suppress_field_weather": ["return true"],
        "on_switch_in": "$effect_state.switching_in = true",
        "on_start": ["if $effect_state.switching_in:", ["log_ability"]]
      }
    }
  }
}
