{
  "pokedoll": {
    "name": "Pok√© Doll",
    "target": "Active",
    "flags": [],
    "effect": {
      "callbacks": {
        "on_player_use": ["if $mon.player.can_escape:", ["escape: $mon"]]
      }
    }
  },
  "fluffytail": {
    "name": "Fluffy Tail",
    "flags": [],
    "effect": {
      "callbacks": {
        "on_player_use": ["if $mon.player.can_escape:", ["escape: $mon"]]
      }
    }
  },
  "adamantorb": {
    "name": "Adamant Orb",
    "flags": [],
    "special_data": { "fling": { "power": 60 } },
    "effect": {
      "callbacks": {
        "on_source_base_power": [
          "$base_species = func_call(base_species: $source)",
          "if $base_species == dialga and ($move.type == steel or $move.type == dragon):",
          ["return $base_power * 6/5"]
        ]
      }
    }
  },
  "lustrousorb": {
    "name": "Lustrous Orb",
    "flags": [],
    "special_data": { "fling": { "power": 60 } },
    "effect": {
      "callbacks": {
        "on_source_base_power": [
          "$base_species = func_call(base_species: $source)",
          "if $base_species == palkia and ($move.type == water or $move.type == dragon):",
          ["return $base_power * 6/5"]
        ]
      }
    }
  },
  "brightpowder": {
    "name": "Bright Powder",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": { "callbacks": { "on_modify_accuracy": ["return $acc * 9/10"] } }
  },
  "whiteherb": {
    "name": "White Herb",
    "flags": [],
    "special_data": { "fling": { "power": 10, "use_item": true } },
    "effect": {
      "callbacks": {
        "on_update": [
          "$activate = false",
          "foreach $stat in func_call(boostable_stats):",
          [
            "if func_call(get_boost: $mon.boosts $stat) < 0:",
            ["$activate = true"]
          ],
          "if $activate:",
          ["use_item: $mon"]
        ],
        "on_use": ["clear_negative_boosts: $mon"]
      }
    }
  },
  "machobrace": {
    "name": "Macho Brace",
    "flags": [],
    "special_data": { "fling": { "power": 60 } },
    "effect": { "callbacks": { "on_modify_spe": ["return $spe / 2"] } }
  },
  "expshare": { "name": "Exp. Share", "flags": [] },
  "quickclaw": {
    "name": "Quick Claw",
    "flags": [],
    "special_data": { "fling": { "power": 80 } },
    "effect": {
      "callbacks": {
        "on_sub_priority": {
          "order": 1,
          "priority": -1,
          "program": [
            "if func_call(chance: 1 5):",
            ["log_activate: with_target", "return 1"]
          ]
        }
      }
    }
  },
  "soothebell": {
    "name": "Soothe Bell",
    "flags": [],
    "effect": {
      "callbacks": {
        "on_modify_friendship_increase": ["return $friendship * 3/2"]
      }
    }
  },
  "mentalherb": {
    "name": "Mental Herb",
    "flags": [],
    "special_data": { "fling": { "power": 10, "use_item": true } },
    "effect": {
      "callbacks": {
        "on_update": [
          "$activate = false",
          "$conditions = [attract, taunt, encore, torment, disable, healblock]",
          "foreach $condition in $conditions:",
          [
            "if func_call(has_volatile: $mon $condition):",
            ["$activate = true"]
          ],
          "if $activate:",
          ["use_item: $mon"]
        ],
        "on_use": [
          "$conditions = [attract, taunt, encore, torment, disable, healblock]",
          "foreach $condition in $conditions:",
          ["remove_volatile: $mon $condition"]
        ]
      }
    }
  },
  "choiceband": {
    "name": "Choice Band",
    "flags": ["ChoiceLocking"],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_start": ["remove_volatile: $target choicelock"],
        "on_use_move": ["add_volatile: $user choicelock"],
        "on_modify_atk": ["return $atk * 3/2"]
      }
    }
  },
  "kingsrock": {
    "name": "King's Rock",
    "flags": [],
    "special_data": {
      "fling": { "power": 30, "hit_effect": { "volatile_status": "flinch" } }
    },
    "effect": {
      "callbacks": {
        "on_use_move": {
          "priority": -1,
          "program": [
            "if $move.category == status:",
            ["return"],
            "foreach $secondary in $move.secondary_effects:",
            [
              "if $secondary.target.is_defined and $secondary.target.volatile_status == flinch:",
              ["return"]
            ],
            "$added_secondary = func_call(secondary_hit_effect)",
            "$added_secondary.chance = 1/10",
            "$added_secondary.target = func_call(hit_effect)",
            "$added_secondary.target.volatile_status = flinch",
            "add_secondary_effect_to_move: $move $added_secondary"
          ]
        }
      }
    }
  },
  "silverpowder": {
    "name": "Silver Powder",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Bug"
        }
      }
    }
  },
  "amuletcoin": { "name": "Amulet Coin", "flags": [] },
  "cleansetag": { "name": "Cleanse Tag", "flags": [] },
  "souldew": {
    "name": "Soul Dew",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "callbacks": {
        "on_source_base_power": [
          "$base_species = func_call(base_species: $source)",
          "if ($base_species == latias or $base_species == latios) and ($move.type == psychic or $move.type == dragon):",
          ["return $base_power * 6/5"]
        ]
      }
    }
  },
  "deepseatooth": {
    "name": "Deep Sea Tooth",
    "flags": [],
    "special_data": { "fling": { "power": 90 } },
    "effect": {
      "callbacks": {
        "on_modify_spd": [
          "$base_species = func_call(base_species: $target)",
          "if $base_species == clamperl:",
          ["return $spd * 2"]
        ]
      }
    }
  },
  "deepseascale": {
    "name": "Deep Sea Scale",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "callbacks": {
        "on_modify_spd": [
          "$base_species = func_call(base_species: $target)",
          "if $base_species == clamperl:",
          ["return $spd * 2"]
        ]
      }
    }
  },
  "smokeball": {
    "name": "Smoke Ball",
    "flags": [],
    "effect": {
      "callbacks": {
        "on_force_escape": ["log_activate: with_target", "return false"]
      }
    }
  },
  "everstone": { "name": "Everstone", "flags": [] },
  "focusband": {
    "name": "Focus Band",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_damage": {
          "priority": -40,
          "program": [
            "if func_call(chance: 1 10) and $damage >= $target.hp and $effect.is_move:",
            ["log_activate: with_target", "return $target.hp - 1"]
          ]
        }
      }
    }
  },
  "luckyegg": {
    "name": "Lucky Egg",
    "flags": [],
    "effect": { "callbacks": { "on_modify_experience": ["return $exp * 2"] } }
  },
  "scopelens": {
    "name": "Scope Lens",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "callbacks": { "on_modify_crit_ratio": ["return $crit_ratio + 1"] }
    }
  },
  "metalcoat": {
    "name": "Metal Coat",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Steel"
        }
      }
    }
  },
  "berryjuice": {
    "name": "Berry Juice",
    "flags": ["Medicine"],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "callbacks": {
        "on_player_try_use_item": [
          "if $target.exited or $target.hp >= $target.max_hp:",
          ["return false"]
        ],
        "on_player_use": ["use_given_item: $mon $this.id"],
        "on_update": ["if $mon.hp <= $mon.max_hp / 2:", ["use_item: $mon"]],
        "on_try_use_item": ["if !$target.can_heal:", ["return false"]],
        "on_use": ["heal: $mon 20"]
      }
    }
  },
  "leftovers": {
    "name": "Leftovers",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_residual": ["heal: $target expr($target.base_max_hp / 16)"]
      }
    }
  },
  "lightball": {
    "name": "Light Ball",
    "flags": [],
    "special_data": {
      "fling": { "power": 30, "hit_effect": { "status": "par" } }
    },
    "effect": {
      "callbacks": {
        "on_modify_atk": [
          "$base_species = func_call(base_species: $target)",
          "if $base_species == pikachu:",
          ["return $atk * 2"]
        ],
        "on_modify_spa": [
          "$base_species = func_call(base_species: $target)",
          "if $base_species == pikachu:",
          ["return $spa * 2"]
        ]
      }
    }
  },
  "softsand": {
    "name": "Soft Sand",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Ground"
        }
      }
    }
  },
  "hardstone": {
    "name": "Hard Stone",
    "flags": [],
    "special_data": { "fling": { "power": 100 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Rock"
        }
      }
    }
  },
  "miracleseed": {
    "name": "Miracle Seed",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Grass"
        }
      }
    }
  },
  "blackglasses": {
    "name": "Black Glasses",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Dark"
        }
      }
    }
  },
  "blackbelt": {
    "name": "Black Belt",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Fighting"
        }
      }
    }
  },
  "magnet": {
    "name": "Magnet",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Electric"
        }
      }
    }
  },
  "mysticwater": {
    "name": "Mystic Water",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Water"
        }
      }
    }
  },
  "sharpbeak": {
    "name": "Sharp Beak",
    "flags": [],
    "special_data": { "fling": { "power": 50 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Flying"
        }
      }
    }
  },
  "poisonbarb": {
    "name": "Poison Barb",
    "flags": [],
    "special_data": {
      "fling": { "power": 70, "hit_effect": { "status": "psn" } }
    },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Poison"
        }
      }
    }
  },
  "nevermeltice": {
    "name": "Never-Melt Ice",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Ice"
        }
      }
    }
  },
  "spelltag": {
    "name": "Spell Tag",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Ghost"
        }
      }
    }
  },
  "twistedspoon": {
    "name": "Twisted Spoon",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Psychic"
        }
      }
    }
  },
  "charcoal": {
    "name": "Charcoal",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Fire"
        }
      }
    }
  },
  "dragonfang": {
    "name": "Dragon Fang",
    "flags": [],
    "special_data": { "fling": { "power": 70 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Dragon"
        }
      }
    }
  },
  "silkscarf": {
    "name": "Silk Scarf",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Normal"
        }
      }
    }
  },
  "shellbell": {
    "name": "Shell Bell",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "callbacks": {
        "on_after_move": [
          "if $move.total_damage > 0:",
          ["heal: $user expr($move.total_damage / 8) no_source"]
        ]
      }
    }
  },
  "seaincense": {
    "name": "Sea Incense",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Water"
        }
      }
    }
  },
  "laxincense": {
    "name": "Lax Incense",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": { "callbacks": { "on_modify_accuracy": ["return $acc * 9/10"] } }
  },
  "luckypunch": {
    "name": "Lucky Punch",
    "flags": [],
    "special_data": { "fling": { "power": 40 } },
    "effect": {
      "callbacks": {
        "on_modify_crit_ratio": [
          "$base_species = func_call(base_species: $target)",
          "if $base_species == chansey:",
          ["return $crit_ratio * 2"]
        ]
      }
    }
  },
  "metalpowder": {
    "name": "Metal Powder",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_modify_def": ["if $target.species == ditto:", ["return $def * 2"]]
      }
    }
  },
  "thickclub": {
    "name": "Thick Club",
    "flags": [],
    "special_data": { "fling": { "power": 90 } },
    "effect": {
      "callbacks": {
        "on_modify_atk": [
          "$base_species = func_call(base_species: $target)",
          "if $base_species == cubone or $base_species == marowak:",
          ["return $atk * 2"]
        ]
      }
    }
  },
  "stick": {
    "name": "Stick",
    "flags": [],
    "special_data": { "fling": { "power": 60 } },
    "effect": {
      "callbacks": {
        "on_modify_crit_ratio": [
          "$base_species = func_call(base_species: $user)",
          "if $base_species == farfetchd:",
          ["return $crit_ratio + 2"]
        ]
      }
    }
  },
  "redscarf": { "name": "Red Scarf", "flags": [] },
  "bluescarf": { "name": "Blue Scarf", "flags": [] },
  "pinkscarf": { "name": "Pink Scarf", "flags": [] },
  "greenscarf": { "name": "Green Scarf", "flags": [] },
  "yellowscarf": { "name": "Yellow Scarf", "flags": [] },
  "widelens": {
    "name": "Wide Lens",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_source_modify_accuracy": ["return $acc * 11/10"]
      }
    }
  },
  "muscleband": {
    "name": "Muscle Band",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_source_base_power": [
          "if $move.category == physical:",
          ["return $base_power * 11/10"]
        ]
      }
    }
  },
  "wiseglasses": {
    "name": "Wise Glasses",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_source_base_power": [
          "if $move.category == special:",
          ["return $base_power * 11/10"]
        ]
      }
    }
  },
  "expertbelt": {
    "name": "Expert Belt",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_modify_damage": [
          "if func_call(type_modifier_against_target: $move $target) > 0:",
          ["return $damage * 6/5"]
        ]
      }
    }
  },
  "lightclay": {
    "name": "Light Clay",
    "flags": [],
    "special_data": { "fling": { "power": 30 } }
  },
  "lifeorb": {
    "name": "Life Orb",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "callbacks": {
        "on_modify_damage": ["return $damage * 13/10"],
        "on_after_move": [
          "if $target.is_defined and $user != $target and $move.category != status and !$user.force_switch:",
          ["damage: $user expr($user.base_max_hp / 10) use_target_as_source"]
        ]
      }
    }
  },
  "powerherb": {
    "name": "Power Herb",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_charge_move": {
          "priority": -1,
          "program": [
            "if !func_call(use_item: $user):",
            ["return"],
            "return false"
          ]
        }
      }
    }
  },
  "toxicorb": {
    "name": "Toxic Orb",
    "flags": [],
    "special_data": {
      "fling": { "power": 30, "hit_effect": { "status": "tox" } }
    },
    "effect": {
      "callbacks": {
        "on_residual": ["set_status: $target tox"]
      }
    }
  },
  "flameorb": {
    "name": "Flame Orb",
    "flags": [],
    "special_data": {
      "fling": { "power": 30, "hit_effect": { "status": "brn" } },
      "effect": {
        "callbacks": {
          "on_residual": ["set_status: $target brn"]
        }
      }
    }
  },
  "quickpowder": {
    "name": "Quick Powder",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_modify_spe": [
          "$base_species = func_call(base_species: $target)",
          "if $base_species == ditto and !$target.transformed:",
          ["return $spe * 2"]
        ]
      }
    }
  },
  "focussash": {
    "name": "Focus Sash",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_damage": {
          "priority": -40,
          "program": [
            "if $target.hp == $target.max_hp and $damage >= $target.hp and $effect.is_move:",
            ["if func_call(use_item: $target):", ["return $target.hp - 1"]]
          ]
        }
      }
    }
  },
  "zoomlens": {
    "name": "Zoom Lens",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_source_modify_accuracy": [
          "if !func_call(will_move_this_turn: $target):",
          ["return $acc * 6/5"]
        ]
      }
    }
  },
  "metronome": {
    "name": "Metronome",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "callbacks": {
        "on_start": ["add_volatile: $target $this.id"],
        "on_end": ["remove_volatile: $target $this.id"]
      }
    },
    "condition": {
      "callbacks": {
        "on_start": ["$effect_state.counter = 0"],
        "on_try_move": {
          "priority": -10,
          "program": [
            "# Moves that call other moves are ignored.",
            "if func_call(move_has_flag: $move callsmove):",
            ["return"],
            "$in_charge_move = func_call(has_volatile: $user twoturnmove)",
            "if $effect_state.last_move != $move.id:",
            ["$effect_state.counter = 0"],
            "else if $user.move_last_turn_succeeded or $in_charge_move:",
            ["$effect_state.counter = $effect_state.counter + 1"],
            "$effect_state.last_move = $move.id"
          ]
        },
        "on_modify_damage": [
          "$counter = func_call(min: $effect_state.counter 5)",
          "return $damage * ($counter + 5) / 5"
        ]
      }
    }
  },
  "ironball": {
    "name": "Iron Ball",
    "flags": [],
    "special_data": { "fling": { "power": 130 } },
    "effect": {
      "callbacks": {
        "is_grounded": ["return true"],
        "on_modify_spe": ["return $spe / 2"],
        "on_effectiveness": [
          "# Target is grounded for other reasons.",
          "if func_call(has_volatile: $target ingrain) or func_call(has_volatile: $target smackdown) or func_call(has_pseudo_weather: gravity):",
          ["return"],
          "# Overall effectiveness of Ground moves against a target with Flying type is 1x.",
          "if $move.type == ground and func_call(has_type: $target flying):",
          ["return 0"]
        ]
      }
    }
  },
  "laggingtail": {
    "name": "Lagging Tail",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_sub_priority": ["return -1"]
      }
    }
  },
  "destinyknot": {
    "name": "Destiny Knot",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_after_add_volatile": [
          "if $effect.id != attract:",
          ["return"],
          "if !$source or $source == $target:",
          ["return"],
          "add_volatile: $source attract use_target_as_source"
        ]
      }
    }
  },
  "blacksludge": {
    "name": "Black Sludge",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "callbacks": {
        "on_residual": [
          "if func_call(has_type: $target poison):",
          ["heal: $target expr($target.base_max_hp / 16)"],
          "else:",
          ["damage: $target expr($target.base_max_hp / 8)"]
        ]
      }
    }
  },
  "icyrock": {
    "name": "Icy Rock",
    "flags": [],
    "special_data": { "fling": { "power": 40 } }
  },
  "smoothrock": {
    "name": "Smooth Rock",
    "flags": [],
    "special_data": { "fling": { "power": 10 } }
  },
  "heatrock": {
    "name": "Heat Rock",
    "flags": [],
    "special_data": { "fling": { "power": 60 } }
  },
  "damprock": {
    "name": "Damp Rock",
    "flags": [],
    "special_data": { "fling": { "power": 60 } }
  },
  "gripclaw": {
    "name": "Grip Claw",
    "flags": [],
    "special_data": { "fling": { "power": 90 } }
  },
  "choicescarf": {
    "name": "Choice Scarf",
    "flags": ["ChoiceLocking"],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_start": ["remove_volatile: $target choicelock"],
        "on_use_move": ["add_volatile: $user choicelock"],
        "on_modify_spe": ["return $spe * 3/2"]
      }
    }
  },
  "stickybarb": {
    "name": "Sticky Barb",
    "flags": [],
    "special_data": { "fling": { "power": 80 } },
    "effect": {
      "callbacks": {
        "on_residual": ["damage: $target expr($target.base_max_hp / 8)"],
        "on_hit": [
          "if $source == $target or $source.item.is_defined or !func_call(move_makes_contact: $move):",
          ["return"],
          "# Make sure we can set the item first.",
          "if !func_call(set_item: $source $target.item dry_run):",
          ["return"],
          "$item = func_call(take_item: $target)",
          "if !$item:",
          ["return"],
          "set_item: $source $item"
        ]
      }
    }
  },
  "powerbracer": {
    "name": "Power Bracer",
    "flags": ["NoKlutz"],
    "special_data": { "fling": { "power": 70 } },
    "effect": {
      "callbacks": {
        "on_modify_spe": ["return $spe / 2"],
        "on_modify_ev_yield": ["$evs.atk = $evs.atk + 8", "return $evs"]
      }
    }
  },
  "powerbelt": {
    "name": "Power Belt",
    "flags": ["NoKlutz"],
    "special_data": { "fling": { "power": 70 } },
    "effect": {
      "callbacks": {
        "on_modify_spe": ["return $spe / 2"],
        "on_modify_ev_yield": ["$evs.def = $evs.def + 8", "return $evs"]
      }
    }
  },
  "powerlens": {
    "name": "Power Lens",
    "flags": ["NoKlutz"],
    "special_data": { "fling": { "power": 70 } },
    "effect": {
      "callbacks": {
        "on_modify_spe": ["return $spe / 2"],
        "on_modify_ev_yield": ["$evs.spa = $evs.spa + 8", "return $evs"]
      }
    }
  },
  "powerband": {
    "name": "Power Band",
    "flags": ["NoKlutz"],
    "special_data": { "fling": { "power": 70 } },
    "effect": {
      "callbacks": {
        "on_modify_spe": ["return $spe / 2"],
        "on_modify_ev_yield": ["$evs.spd = $evs.spd = 8", "return $evs"]
      }
    }
  },
  "poweranklet": {
    "name": "Power Anklet",
    "flags": ["NoKlutz"],
    "special_data": { "fling": { "power": 70 } },
    "effect": {
      "callbacks": {
        "on_modify_spe": ["return $spe / 2"],
        "on_modify_ev_yield": ["$evs.spe = $evs.spe + 8", "return $evs"]
      }
    }
  },
  "powerweight": {
    "name": "Power Weight",
    "flags": ["NoKlutz"],
    "special_data": { "fling": { "power": 70 } },
    "effect": {
      "callbacks": {
        "on_modify_spe": ["return $spe / 2"],
        "on_modify_ev_yield": ["$evs.hp = $evs.hp + 8", "return $evs"]
      }
    }
  },
  "shedshell": {
    "name": "Shed Shell",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_trap_mon": {
          "priority": 1,
          "program": ["return false"]
        }
      }
    }
  },
  "bigroot": {
    "name": "Big Root",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_try_heal": [
          "$effects = [drain, leechseed, ingrain, aquaring, strengthsap]",
          "if $effects has $effect:",
          ["return $damage * 13/10"]
        ]
      }
    }
  },
  "choicespecs": {
    "name": "Choice Specs",
    "flags": ["ChoiceLocking"],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "callbacks": {
        "on_start": ["remove_volatile: $target choicelock"],
        "on_use_move": ["add_volatile: $user choicelock"],
        "on_modify_spa": ["return $spa * 3/2"]
      }
    }
  },
  "flameplate": {
    "name": "Flame Plate",
    "force_forme": "Arceus-Fire",
    "flags": [],
    "special_data": {
      "fling": { "power": 90 },
      "judgment": { "type": "Fire" }
    },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Fire"
        }
      }
    }
  },
  "splashplate": {
    "name": "Splash Plate",
    "force_forme": "Arceus-Water",
    "flags": [],
    "special_data": {
      "fling": { "power": 90 },
      "judgment": { "type": "Water" }
    },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Water"
        }
      }
    }
  },
  "zapplate": {
    "name": "Zap Plate",
    "force_forme": "Arceus-Electric",
    "flags": [],
    "special_data": {
      "fling": { "power": 90 },
      "judgment": { "type": "Electric" }
    },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Electric"
        }
      }
    }
  },
  "meadowplate": {
    "name": "Meadow Plate",
    "force_forme": "Arceus-Grass",
    "flags": [],
    "special_data": {
      "fling": { "power": 90 },
      "judgment": { "type": "Grass" }
    },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Grass"
        }
      }
    }
  },
  "icicleplate": {
    "name": "Icicle Plate",
    "force_forme": "Arceus-Ice",
    "flags": [],
    "special_data": { "fling": { "power": 90 }, "judgment": { "type": "Ice" } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Ice"
        }
      }
    }
  },
  "fistplate": {
    "name": "Fist Plate",
    "force_forme": "Arceus-Fighting",
    "flags": [],
    "special_data": {
      "fling": { "power": 90 },
      "judgment": { "type": "Fighting" }
    },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Fighting"
        }
      }
    }
  },
  "toxicplate": {
    "name": "Toxic Plate",
    "force_forme": "Arceus-Poison",
    "flags": [],
    "special_data": {
      "fling": { "power": 90 },
      "judgment": { "type": "Poison" }
    },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Poison"
        }
      }
    }
  },
  "earthplate": {
    "name": "Earth Plate",
    "force_forme": "Arceus-Ground",
    "flags": [],
    "special_data": {
      "fling": { "power": 90 },
      "judgment": { "type": "Ground" }
    },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Ground"
        }
      }
    }
  },
  "skyplate": {
    "name": "Sky Plate",
    "force_forme": "Arceus-Flying",
    "flags": [],
    "special_data": {
      "fling": { "power": 90 },
      "judgment": { "type": "Flying" }
    },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Flying"
        }
      }
    }
  },
  "mindplate": {
    "name": "Mind Plate",
    "force_forme": "Arceus-Psychic",
    "flags": [],
    "special_data": {
      "fling": { "power": 90 },
      "judgment": { "type": "Psychic" }
    },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Psychic"
        }
      }
    }
  },
  "insectplate": {
    "name": "Insect Plate",
    "force_forme": "Arceus-Bug",
    "flags": [],
    "special_data": { "fling": { "power": 90 }, "judgment": { "type": "Bug" } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Bug"
        }
      }
    }
  },
  "stoneplate": {
    "name": "Stone Plate",
    "force_forme": "Arceus-Rock",
    "flags": [],
    "special_data": {
      "fling": { "power": 90 },
      "judgment": { "type": "Rock" }
    },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Rock"
        }
      }
    }
  },
  "spookyplate": {
    "name": "Spooky Plate",
    "force_forme": "Arceus-Ghost",
    "flags": [],
    "special_data": {
      "fling": { "power": 90 },
      "judgment": { "type": "Ghost" }
    },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Ghost"
        }
      }
    }
  },
  "dracoplate": {
    "name": "Draco Plate",
    "force_forme": "Arceus-Dragon",
    "flags": [],
    "special_data": {
      "fling": { "power": 90 },
      "judgment": { "type": "Dragon" }
    },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Dragon"
        }
      }
    }
  },
  "dreadplate": {
    "name": "Dread Plate",
    "force_forme": "Arceus-Dark",
    "flags": [],
    "special_data": {
      "fling": { "power": 90 },
      "judgment": { "type": "Dark" }
    },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Dark"
        }
      }
    }
  },
  "ironplate": {
    "name": "Iron Plate",
    "force_forme": "Arceus-Steel",
    "flags": [],
    "special_data": {
      "fling": { "power": 90 },
      "judgment": { "type": "Steel" }
    }
  },
  "oddincense": {
    "name": "Odd Incense",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Psychic"
        }
      }
    }
  },
  "rockincense": {
    "name": "Rock Incense",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Rock"
        }
      }
    }
  },
  "fullincense": {
    "name": "Full Incense",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "delegates": ["item:laggingtail"]
    }
  },
  "waveincense": {
    "name": "Wave Incense",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Water"
        }
      }
    }
  },
  "roseincense": {
    "name": "Rose Incense",
    "flags": [],
    "special_data": { "fling": { "power": 10 } },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Grass"
        }
      }
    }
  },
  "luckincense": { "name": "Luck Incense", "flags": [] },
  "pureincense": { "name": "Pure Incense", "flags": [] },
  "razorclaw": {
    "name": "Razor Claw",
    "flags": [],
    "special_data": { "fling": { "power": 80 } },
    "effect": {
      "callbacks": {
        "on_modify_crit_ratio": ["return $crit_ratio + 1"]
      }
    }
  },
  "razorfang": {
    "name": "Razor Fang",
    "flags": [],
    "special_data": {
      "fling": { "power": 30, "hit_effect": { "volatile_status": "flinch" } },
      "effect": {
        "delegates": ["item:kingsrock"]
      }
    }
  },
  "griseousorb": {
    "name": "Griseous Orb",
    "force_forme": "Giratina-Origin",
    "flags": [],
    "special_data": { "fling": { "power": 60 } },
    "effect": {
      "callbacks": {
        "on_source_base_power": [
          "$base_species = func_call(base_species: $source)",
          "if $base_species == giratina and ($move.type == ghost or $move.type == dragon):",
          ["return $base_power * 6/5"]
        ],
        "on_take_item": [
          "$base_species = func_call(base_species: $target)",
          "if $base_species == giratina:",
          ["return false"]
        ]
      }
    }
  },
  "dousedrive": {
    "name": "Douse Drive",
    "force_forme": "Genesect-Douse",
    "flags": [],
    "special_data": {
      "fling": { "power": 70 },
      "techno_blast": { "type": "Water" }
    }
  },
  "shockdrive": {
    "name": "Shock Drive",
    "force_forme": "Genesect-Shock",
    "flags": [],
    "special_data": {
      "fling": { "power": 70 },
      "techno_blast": { "type": "Electric" }
    }
  },
  "burndrive": {
    "name": "Burn Drive",
    "force_forme": "Genesect-Burn",
    "flags": [],
    "special_data": {
      "fling": { "power": 70 },
      "techno_blast": { "type": "Fire" }
    }
  },
  "chilldrive": {
    "name": "Chill Drive",
    "force_forme": "Genesect-Chill",
    "flags": [],
    "special_data": {
      "fling": { "power": 70 },
      "techno_blast": { "type": "Ice" }
    }
  },
  "prismscale": {
    "name": "Prism Scale",
    "flags": [],
    "special_data": { "fling": { "power": 30 } }
  },
  "eviolite": {
    "name": "Eviolite",
    "flags": [],
    "special_data": { "fling": { "power": 40 } }
  },
  "floatstone": {
    "name": "Float Stone",
    "flags": [],
    "special_data": { "fling": { "power": 30 } }
  },
  "rockyhelmet": {
    "name": "Rocky Helmet",
    "flags": [],
    "special_data": { "fling": { "power": 60 } }
  },
  "airballoon": {
    "name": "Air Balloon",
    "flags": [],
    "special_data": { "fling": { "power": 10 } }
  },
  "redcard": {
    "name": "Red Card",
    "flags": [],
    "special_data": { "fling": { "power": 10 } }
  },
  "ringtarget": {
    "name": "Ring Target",
    "flags": [],
    "special_data": { "fling": { "power": 10 } }
  },
  "bindingband": {
    "name": "Binding Band",
    "flags": [],
    "special_data": { "fling": { "power": 30 } }
  },
  "absorbbulb": {
    "name": "Absorb Bulb",
    "flags": [],
    "special_data": { "fling": { "power": 30 } }
  },
  "cellbattery": {
    "name": "Cell Battery",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "callbacks": {
        "on_damaging_hit": [
          "if $move.type == electric and func_call(can_boost: $target 'atk:1'):",
          ["use_item: $target use_target_as_source"]
        ],
        "on_use": ["boost: $mon 'atk:1'"]
      }
    }
  },
  "ejectbutton": {
    "name": "Eject Button",
    "flags": [],
    "special_data": { "fling": { "power": 30 } }
  },
  "poketoy": { "name": "Pok√© Toy", "flags": [] },
  "weaknesspolicy": {
    "name": "Weakness Policy",
    "flags": [],
    "special_data": { "fling": { "power": 80 } }
  },
  "assaultvest": {
    "name": "Assault Vest",
    "flags": [],
    "special_data": { "fling": { "power": 80 } }
  },
  "pixieplate": {
    "name": "Pixie Plate",
    "force_forme": "Arceus-Fairy",
    "flags": [],
    "special_data": {
      "fling": { "power": 90 },
      "judgment": { "type": "Fairy" }
    },
    "effect": {
      "delegates": ["condition:boosttypepowerby20percentitembase"],
      "local_data": {
        "values": {
          "type": "Fairy"
        }
      }
    }
  },
  "luminousmoss": {
    "name": "Luminous Moss",
    "flags": [],
    "special_data": { "fling": { "power": 30 } }
  },
  "snowball": {
    "name": "Snowball",
    "flags": [],
    "special_data": { "fling": { "power": 30 } }
  },
  "safetygoggles": {
    "name": "Safety Goggles",
    "flags": [],
    "special_data": { "fling": { "power": 80 } },
    "effect": {
      "callbacks": {
        "on_immunity": [
          "if [sandstormweather, hailweather] has $effect.id:",
          ["return false"],
          "if $effect.is_move and func_call(move_has_flag: $effect powder):",
          ["return false"]
        ]
      }
    }
  },
  "adrenalineorb": {
    "name": "Adrenaline Orb",
    "flags": [],
    "special_data": { "fling": { "power": 30 } }
  },
  "terrainextender": {
    "name": "Terrain Extender",
    "flags": [],
    "special_data": { "fling": { "power": 60 } }
  },
  "protectivepads": {
    "name": "Protective Pads",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": { "callbacks": { "is_contact_proof": ["return true"] } }
  },
  "electricseed": {
    "name": "Electric Seed",
    "flags": [],
    "special_data": { "fling": { "power": 10 } }
  },
  "psychicseed": {
    "name": "Psychic Seed",
    "flags": [],
    "special_data": { "fling": { "power": 10 } }
  },
  "mistyseed": {
    "name": "Misty Seed",
    "flags": [],
    "special_data": { "fling": { "power": 10 } }
  },
  "grassyseed": {
    "name": "Grassy Seed",
    "flags": [],
    "special_data": { "fling": { "power": 10 } }
  },
  "fightingmemory": {
    "name": "Fighting Memory",
    "force_forme": "Silvally-Fighting",
    "flags": [],
    "special_data": {
      "fling": { "power": 50 },
      "multi_attack": { "type": "Fighting" }
    }
  },
  "flyingmemory": {
    "name": "Flying Memory",
    "force_forme": "Silvally-Flying",
    "flags": [],
    "special_data": {
      "fling": { "power": 50 },
      "multi_attack": { "type": "Flying" }
    }
  },
  "poisonmemory": {
    "name": "Poison Memory",
    "force_forme": "Silvally-Poison",
    "flags": [],
    "special_data": {
      "fling": { "power": 50 },
      "multi_attack": { "type": "Poison" }
    }
  },
  "groundmemory": {
    "name": "Ground Memory",
    "force_forme": "Silvally-Ground",
    "flags": [],
    "special_data": {
      "fling": { "power": 50 },
      "multi_attack": { "type": "Ground" }
    }
  },
  "rockmemory": {
    "name": "Rock Memory",
    "force_forme": "Silvally-Rock",
    "flags": [],
    "special_data": {
      "fling": { "power": 50 },
      "multi_attack": { "type": "Rock" }
    }
  },
  "bugmemory": {
    "name": "Bug Memory",
    "force_forme": "Silvally-Bug",
    "flags": [],
    "special_data": {
      "fling": { "power": 50 },
      "multi_attack": { "type": "Bug" }
    }
  },
  "ghostmemory": {
    "name": "Ghost Memory",
    "force_forme": "Silvally-Ghost",
    "flags": [],
    "special_data": {
      "fling": { "power": 50 },
      "multi_attack": { "type": "Ghost" }
    }
  },
  "steelmemory": {
    "name": "Steel Memory",
    "force_forme": "Silvally-Steel",
    "flags": [],
    "special_data": {
      "fling": { "power": 50 },
      "multi_attack": { "type": "Steel" }
    }
  },
  "firememory": {
    "name": "Fire Memory",
    "force_forme": "Silvally-Fire",
    "flags": [],
    "special_data": {
      "fling": { "power": 50 },
      "multi_attack": { "type": "Fire" }
    }
  },
  "watermemory": {
    "name": "Water Memory",
    "force_forme": "Silvally-Water",
    "flags": [],
    "special_data": {
      "fling": { "power": 50 },
      "multi_attack": { "type": "Water" }
    }
  },
  "grassmemory": {
    "name": "Grass Memory",
    "force_forme": "Silvally-Grass",
    "flags": [],
    "special_data": {
      "fling": { "power": 50 },
      "multi_attack": { "type": "Grass" }
    }
  },
  "electricmemory": {
    "name": "Electric Memory",
    "force_forme": "Silvally-Electric",
    "flags": [],
    "special_data": {
      "fling": { "power": 50 },
      "multi_attack": { "type": "Electric" }
    }
  },
  "psychicmemory": {
    "name": "Psychic Memory",
    "force_forme": "Silvally-Psychic",
    "flags": [],
    "special_data": {
      "fling": { "power": 50 },
      "multi_attack": { "type": "Psychic" }
    }
  },
  "icememory": {
    "name": "Ice Memory",
    "force_forme": "Silvally-Ice",
    "flags": [],
    "special_data": {
      "fling": { "power": 50 },
      "multi_attack": { "type": "Ice" }
    }
  },
  "dragonmemory": {
    "name": "Dragon Memory",
    "force_forme": "Silvally-Dragon",
    "flags": [],
    "special_data": {
      "fling": { "power": 50 },
      "multi_attack": { "type": "Dragon" }
    }
  },
  "darkmemory": {
    "name": "Dark Memory",
    "force_forme": "Silvally-Dark",
    "flags": [],
    "special_data": {
      "fling": { "power": 50 },
      "multi_attack": { "type": "Dark" }
    }
  },
  "fairymemory": {
    "name": "Fairy Memory",
    "force_forme": "Silvally-Fairy",
    "flags": [],
    "special_data": {
      "fling": { "power": 50 },
      "multi_attack": { "type": "Fairy" }
    }
  },
  "throatspray": {
    "name": "Throat Spray",
    "flags": [],
    "special_data": { "fling": { "power": 30 } }
  },
  "ejectpack": {
    "name": "Eject Pack",
    "flags": [],
    "special_data": { "fling": { "power": 50 } }
  },
  "heavydutyboots": {
    "name": "Heavy-Duty Boots",
    "flags": [],
    "special_data": { "fling": { "power": 80 } },
    "effect": { "callbacks": { "is_immune_to_entry_hazards": ["return true"] } }
  },
  "blunderpolicy": {
    "name": "Blunder Policy",
    "flags": [],
    "special_data": { "fling": { "power": 80 } }
  },
  "roomservice": {
    "name": "Room Service",
    "flags": [],
    "special_data": { "fling": { "power": 100 } }
  },
  "utilityumbrella": {
    "name": "Utility Umbrella",
    "flags": [],
    "special_data": { "fling": { "power": 60 } },
    "effect": {
      "callbacks": {
        "suppress_mon_weather": [
          "if $field.weather.is_defined and ($field.weather.is_raining or $field.weather.is_sunny):",
          ["return true"]
        ],
        "on_start": ["run_event: WeatherChange"],
        "on_end": ["run_event: WeatherChange"]
      }
    }
  },
  "adamantcrystal": {
    "name": "Adamant Crystal",
    "force_forme": "Dialga-Origin",
    "flags": []
  },
  "lustrousglobe": {
    "name": "Lustrous Globe",
    "force_forme": "Palkia-Origin",
    "flags": []
  },
  "griseouscore": {
    "name": "Griseous Core",
    "force_forme": "Giratina-Origin",
    "flags": [],
    "effect": {
      "delegates": ["item:griseousorb"]
    }
  },
  "boosterenergy": {
    "name": "Booster Energy",
    "flags": [],
    "special_data": { "fling": { "power": 30 } }
  },
  "abilityshield": {
    "name": "Ability Shield",
    "flags": [],
    "special_data": { "fling": { "power": 30 } },
    "effect": {
      "callbacks": {
        "on_before_switch_in": [
          "# Abilities start before items, so we must start this item before an ability tries to start and thinks it is suppressed.",
          "start_item: silent"
        ],
        "on_start": [
          "# Items cannot modify ability suppression, so we use a condition.",
          "add_volatile: $target $this.id"
        ],
        "on_end": ["remove_volatile: $target $this.id"],
        "on_set_ability": [
          "if $effect.id != trace or !$effect_state.logged_for_trace:",
          ["log_block: with_target", "$effect_state.logged_for_trace = true"],
          "return false"
        ],
        "on_try_hit": [
          "if $move.id == gastroacid:",
          ["log_block: with_target", "return false"]
        ]
      }
    },
    "condition": {
      "callbacks": {
        "suppress_mon_ability": {
          "priority": 1,
          "program": ["return false"]
        }
      }
    }
  },
  "clearamulet": {
    "name": "Clear Amulet",
    "flags": [],
    "special_data": { "fling": { "power": 30 } }
  },
  "mirrorherb": {
    "name": "Mirror Herb",
    "flags": [],
    "special_data": { "fling": { "power": 30 } }
  },
  "punchingglove": {
    "name": "Punching Glove",
    "flags": [],
    "special_data": { "fling": { "power": 30 } }
  },
  "covertcloak": {
    "name": "Covert Cloak",
    "flags": [],
    "special_data": { "fling": { "power": 30 } }
  },
  "loadeddice": {
    "name": "Loaded Dice",
    "flags": [],
    "special_data": { "fling": { "power": 30 } }
  },
  "auspiciousarmor": {
    "name": "Auspicious Armor",
    "flags": [],
    "special_data": { "fling": { "power": 30 } }
  },
  "leaderscrest": { "name": "Leader's Crest", "flags": [] },
  "fairyfeather": {
    "name": "Fairy Feather",
    "flags": [],
    "special_data": { "fling": { "power": 10 } }
  },
  "wellspringmask": {
    "name": "Wellspring Mask",
    "force_forme": "Ogerpon-Wellspring",
    "flags": [],
    "special_data": { "fling": { "power": 60 } }
  },
  "hearthflamemask": {
    "name": "Hearthflame Mask",
    "force_forme": "Ogerpon-Hearthflame",
    "flags": [],
    "special_data": { "fling": { "power": 60 } }
  },
  "cornerstonemask": {
    "name": "Cornerstone Mask",
    "force_forme": "Ogerpon-Cornerstone",
    "flags": [],
    "special_data": { "fling": { "power": 60 } }
  }
}
